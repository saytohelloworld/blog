0. 请问 char *name = “FishC” 和 char name[] = {‘F’, ‘i’, ‘s’, ‘h’, ‘C’} 是否等价？
    是，等价
    [改正:] 不等价，char *name = “FishC” 应该与 char name[] = {‘F’, ‘i’, ‘s’, ‘h’, ‘C’, ‘\0’} 等价

1. 请解释为何下边变量 a 的值为何打印出来是 144（请写出分析过程）？
    [改正:] 200(10) == 128(10) + 64(10) + 8(10) == 1000 0000(2) + 100 0000(2) + 1000(2) == 1100 1000(2)
            1100 1000(2) + 1100 1000(2) == 1 1001 0000(2)
            由于 char 类型占一个字节（8 位），因此舍弃掉最前边的进位，结果为 1001 0000(2) == 144

2. 请将语句 a = b = c = 3; 拆分成 3 条独立语句。
    a = 3;
    b = 3;
    c = 3;
    [改正:] c = 3;
            b = c;
            a = b;

3. 你听说过“表达式”，也听说过“语句”，那请问两者的区别是什么？
    表达式是一个运算的过程，语句是一个或多个表达式组成的句子
    [改正:] 一个表达式会产生一个值，它可以放在任何需要一个值的地方；而语句是一段可执行代码，可以理解为一个行为，语句不一定有值

4. 下边代码中的表达式 a = 0 && 1 = b 编译会出错，你知道为什么吗？
    因为 1 = b 是一个赋值运算，而不是关系运算
    [改正:] 少打一个 =

5. 下边有一段代码，请描述表达式 a < b && c < d 的求值顺序（先求什么、再求什么、最后求什么）
    先求左边关系表达式的值，如果为真，就继续求右边关系表达式的值，最后求逻辑表达式的值
    [改正:] 先求关系表达式 a > b 的值，由于结果为假，根据短路求值的原则，直接得到逻辑表达式 a > b && c < d 的值为假（因为 && 需要两边同时为真，结果才为真，所以左边为假，右边则没有必要继续判断，这就是短路求值的原理）

6. 请用小括号和数字序号体现表达式中运算符的优先顺序，并口算出表达式的值（下边假设变量 a、b、c、d 的值分别是 1、2、3、4）
    A. (a + b)2 && (c / d)1
    B. ((a = b)3 && (c - d)1)2
    C. (('a' + 'b')1 <= 'c')2 || ((a / b)3 + (d % c)4)5
    D. ((((!!a)1 + (!b)2)3 + c)4 – a)5 – c
    E. a = b - c || ((a % b)1 && (c / d)2)3
    [改正:]
            B. a = (b && (c - d)1)2
            E. ((b - c)4 || ((a % b)1 && (c / d)2)3)5

7. 请说明逻辑与（&&）在下边表达式中起到的重要作用
count != 0 && sum/count
    除数不能为零，逻辑与过滤了零
    [答案:] 该表达式使用逻辑与（&&）来确保 sum/count 的除数不为 0
            因为当 count 为 0 时，并不会导致 sum/0，因为根据短路求值的原则，&& 运算符在左侧为假的情况下，并不会计算右侧的表达式。

8. 请用一个逻辑表达式来判断某一年是否为闰年。
    (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;
    [改正:] (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)